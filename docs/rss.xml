<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Chris.Cai Blog</title><link>https://chajiuqqq.github.io/</link><description>前进前进前进！</description><copyright>Chris.Cai Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/50012686?v=4</url><title>avatar</title><link>https://chajiuqqq.github.io/</link></image><lastBuildDate>Tue, 17 Sep 2024 07:24:31 +0000</lastBuildDate><managingEditor>Chris.Cai Blog</managingEditor><ttl>60</ttl><webMaster>Chris.Cai Blog</webMaster><item><title>Git妙用</title><link>https://chajiuqqq.github.io//post/Git-miao-yong.html</link><description># 用例&#13;
- **查看commit提交的细节，会展示文件变化细节**：`git show &lt;commit&gt;` OR `git log -p`&#13;
- **查看commit中提交的文件名称**：`git show --name-status &lt;commit&gt;`&#13;
- git merge出现冲突时，不想处理冲突，取消合并：`git merge --abort`&#13;
- 如果已经merge了，要回退，用`git reset `或 `git revert`&#13;
&#13;
```&#13;
$  git show --name-status 1e7cf253a6e6e&#13;
commit 1e7cf253a6e6ecee6376b12d9fcabf2ec3f7f9e6 (EH-1699)&#13;
Author: caijiachen &lt;chajiuqqq@gmail.com&gt;&#13;
Date:   Sat Sep 7 15:57:21 2024 +0200&#13;
&#13;
    EH-1699: add other stock business interface to proto&#13;
&#13;
M       oms/pkg/proto/oms_order_v3.pb.go&#13;
M       oms/pkg/proto/oms_order_v3.proto&#13;
M       rfcctl/types/mm.go&#13;
M       webproto&#13;
```&#13;
# git stash&#13;
```&#13;
 git stash -h&#13;
usage: git stash list [&lt;log-options&gt;]&#13;
   or: git stash show [-u | --include-untracked | --only-untracked] [&lt;diff-options&gt;] [&lt;stash&gt;]&#13;
   or: git stash drop [-q | --quiet] [&lt;stash&gt;]&#13;
   or: git stash pop [--index] [-q | --quiet] [&lt;stash&gt;]&#13;
   or: git stash apply [--index] [-q | --quiet] [&lt;stash&gt;]&#13;
   or: git stash branch &lt;branchname&gt; [&lt;stash&gt;]&#13;
   or: git stash [push [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet]&#13;
                 [-u | --include-untracked] [-a | --all] [(-m | --message) &lt;message&gt;]&#13;
                 [--pathspec-from-file=&lt;file&gt; [--pathspec-file-nul]]&#13;
                 [--] [&lt;pathspec&gt;...]]&#13;
   or: git stash save [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet]&#13;
                 [-u | --include-untracked] [-a | --all] [&lt;message&gt;]&#13;
   or: git stash clear&#13;
   or: git stash create [&lt;message&gt;]&#13;
   or: git stash store [(-m | --message) &lt;message&gt;] [-q | --quiet] &lt;commit&gt;&#13;
```&#13;
- 显示stash列表：` git stash list`&#13;
```&#13;
$ git stash list&#13;
stash@{0}: WIP on EH-1699: 1e7cf253 EH-1699: add other stock business interface to proto&#13;
stash@{1}: On dev: A bunch of stuff that didn't work&#13;
stash@{2}: WIP on EH-1651: 88be22bf EH-1651:change sync delivery order&#13;
stash@{3}: WIP on dev: 7b2cf784 EH-1593&#13;
stash@{4}: WIP on dev: db503df4 EH-1511: debug&#13;
stash@{5}: WIP on dev: db503df4 EH-1511: debug&#13;
stash@{6}: WIP on dev: ec0e86ad Merge remote-tracking branch 'origin/dev' into dev&#13;
stash@{7}: WIP on EH-1136: 70d7b5dd oms:db update&#13;
```&#13;
- 暂存staged变化 ：`git stash`&#13;
- 暂存staged和untracked文件： `git stash -u`&#13;
- 应用stash并从stash列表中删除：`git stash pop`&#13;
- 应用stash但不删除stash记录：`git stash apply`&#13;
&#13;
# git reset &#13;
- `git reset --soft &lt;commit&gt;`：撤回提交并把变化存入stage区，不会丢弃本地文件的其他更改。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/Git-miao-yong.html</guid><pubDate>Sat, 07 Sep 2024 14:27:01 +0000</pubDate></item><item><title>mysql的json处理方法合集</title><link>https://chajiuqqq.github.io//post/mysql-de-json-chu-li-fang-fa-he-ji.html</link><description>&#13;
## 更新json中的某个属性&#13;
&#13;
写一个mysql的sql，property列存储了json，格式是&#13;
```&#13;
{'common': {'code': 'HU001'}, 'factory_code': '2010', 'factory_name': '匈牙利恩捷', 'work_shop_type': 1}&#13;
```&#13;
要求把factory_name从'匈牙利恩捷'更新为'SEMCORP Hungary Kft'&#13;
&#13;
SQL:&#13;
```&#13;
UPDATE category_0&#13;
SET property = JSON_SET(property, '$.factory_name', 'SEMCORP Hungary Kft')&#13;
WHERE JSON_UNQUOTE(JSON_EXTRACT(property, '$.factory_name')) = '匈牙利恩捷';&#13;
```&#13;
解释：&#13;
- JSON_EXTRACT(property, '$.factory_name')：从JSON对象中提取factory_name的值。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/mysql-de-json-chu-li-fang-fa-he-ji.html</guid><pubDate>Tue, 27 Aug 2024 12:04:07 +0000</pubDate></item><item><title>mysqldump导出数据和数据库</title><link>https://chajiuqqq.github.io//post/mysqldump-dao-chu-shu-ju-he-shu-ju-ku.html</link><description>&gt; https://www.cnblogs.com/chenmh/p/5300370.html&#13;
&#13;
1. 导出所有数据库&#13;
```&#13;
mysqldump -uroot -proot --all-databases &gt;/tmp/all.sql&#13;
```&#13;
&#13;
2. 导出指定数据库&#13;
```&#13;
mysqldump -uroot -proot --databases db1 db2 &gt;/tmp/user.sql&#13;
```&#13;
&#13;
3. 只导出表结构，不包含数据&#13;
```&#13;
mysqldump -uroot -proot --no-data --databases db1 &gt;/tmp/db1.sql&#13;
```&#13;
&#13;
4. 导出指定表&#13;
```&#13;
mysqldump -uroot -proot --databases db1 --tables a1 a2  &gt;/tmp/db1.sql&#13;
```&#13;
。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/mysqldump-dao-chu-shu-ju-he-shu-ju-ku.html</guid><pubDate>Mon, 26 Aug 2024 12:06:18 +0000</pubDate></item><item><title>重置mysql/mariadb的root密码</title><link>https://chajiuqqq.github.io//post/zhong-zhi-mysql-mariadb-de-root-mi-ma.html</link><description>https://www.digitalocean.com/community/tutorials/how-to-reset-your-mysql-or-mariadb-root-password。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/zhong-zhi-mysql-mariadb-de-root-mi-ma.html</guid><pubDate>Mon, 22 Jul 2024 06:26:05 +0000</pubDate></item><item><title>优雅截断utf8字符串</title><link>https://chajiuqqq.github.io//post/you-ya-jie-duan-utf8-zi-fu-chuan.html</link><description>&#13;
## 背景&#13;
SAP接口某CHAR字段要求长度不超过25字节，该字段可能输入中文，如何优雅截断字符串？&#13;
- 如果转为byte截取，会导致结尾乱码可能&#13;
- 无法按照字符个数截取，因为可能中英文数字混合输入&#13;
&#13;
## 解决方法&#13;
利用for range字符串时，每次获取一个rune（中英文或者数字），此时index是byte的index。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/you-ya-jie-duan-utf8-zi-fu-chuan.html</guid><pubDate>Mon, 22 Jul 2024 03:47:36 +0000</pubDate></item><item><title>docker可用的国内镜像源</title><link>https://chajiuqqq.github.io//post/docker-ke-yong-de-guo-nei-jing-xiang-yuan.html</link><description>这几个可用，参考https://gist.github.com/y0ngb1n/7e8f16af3242c7815e7ca2f0833d3ea6&#13;
```&#13;
sudo mkdir -p /etc/docker&#13;
sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'&#13;
{&#13;
    'registry-mirrors': [&#13;
        'https://docker.m.daocloud.io',&#13;
        'https://dockerproxy.com',&#13;
        'https://mirror.baidubce.com',&#13;
        'https://docker.nju.edu.cn',&#13;
        'https://mirror.iscas.ac.cn'&#13;
    ]&#13;
}&#13;
EOF&#13;
sudo systemctl daemon-reload&#13;
sudo systemctl restart docker&#13;
```。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/docker-ke-yong-de-guo-nei-jing-xiang-yuan.html</guid><pubDate>Fri, 19 Jul 2024 06:59:54 +0000</pubDate></item><item><title>awk批量删除docker none的image</title><link>https://chajiuqqq.github.io//post/awk-pi-liang-shan-chu-docker%20none-de-image.html</link><description>1. 查看none镜像：&#13;
```&#13;
# docker image ls | grep none&#13;
&lt;none&gt;                        &lt;none&gt;    01a4d5898ad0   39 minutes ago      867MB&#13;
&lt;none&gt;                        &lt;none&gt;    950d8ca6051f   About an hour ago   973MB&#13;
&lt;none&gt;                        &lt;none&gt;    cce3f6491395   2 hours ago         940MB&#13;
&lt;none&gt;                        &lt;none&gt;    2e10b33cb6dd   3 hours ago         932MB&#13;
&lt;none&gt;                        &lt;none&gt;    d616e7abf40c   3 hours ago         932MB&#13;
&lt;none&gt;                        &lt;none&gt;    3565400a4b6e   4 hours ago         932MB&#13;
&lt;none&gt;                        &lt;none&gt;    1a5f77c032b9   4 hours ago         932MB&#13;
&lt;none&gt;                        &lt;none&gt;    a65b4e782623   4 hours ago         932MB&#13;
&lt;none&gt;                        &lt;none&gt;    7c6de7d06887   5 hours ago         932MB&#13;
&lt;none&gt;                        &lt;none&gt;    f2f5d096e2ed   5 hours ago         932MB&#13;
&lt;none&gt;                        &lt;none&gt;    8f93202d9599   20 hours ago        932MB&#13;
&lt;none&gt;                        &lt;none&gt;    6b802f894a86   21 hours ago        932MB&#13;
```&#13;
&#13;
2. 过滤出imageID&#13;
&#13;
- awk 命令会默认以空格作为字段分隔符，并将每行视为一个记录。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/awk-pi-liang-shan-chu-docker%20none-de-image.html</guid><pubDate>Thu, 18 Jul 2024 06:20:09 +0000</pubDate></item><item><title>docker怎么在构建镜像时debug</title><link>https://chajiuqqq.github.io//post/docker-zen-me-zai-gou-jian-jing-xiang-shi-debug.html</link><description>https://devopscube.com/keep-docker-container-running/&#13;
&#13;
## 背景&#13;
&#13;
需要构建编译环境的镜像，但是直接docker build会出现很多错误，不好debug。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/docker-zen-me-zai-gou-jian-jing-xiang-shi-debug.html</guid><pubDate>Thu, 18 Jul 2024 01:58:08 +0000</pubDate></item><item><title>SAP同步事件到业务系统性能优化</title><link>https://chajiuqqq.github.io//post/SAP-tong-bu-shi-jian-dao-ye-wu-xi-tong-xing-neng-you-hua.html</link><description>## 背景&#13;
EAP平台由多个子系统组成，比如MWMS、WMS、MES、OMS、EAP。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/SAP-tong-bu-shi-jian-dao-ye-wu-xi-tong-xing-neng-you-hua.html</guid><pubDate>Tue, 16 Jul 2024 02:55:49 +0000</pubDate></item><item><title>go struct转proto message 的prompt</title><link>https://chajiuqqq.github.io//post/go%20struct-zhuan-proto%20message%20-de-prompt.html</link><description># prompt&#13;
&#13;
帮我把go的struct定义转为proto message定义&#13;
1. 其中message的变量名称用小写+下划线格式命名&#13;
2. go中类似Enum[oms.FeedingType] 的类型转为proto的oms.FeedingType类型&#13;
3. 请把tag中的comment作为注释加到每行定义之后，并忽略其他tag。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/go%20struct-zhuan-proto%20message%20-de-prompt.html</guid><pubDate>Fri, 21 Jun 2024 06:28:28 +0000</pubDate></item><item><title>[TODO] Go微服务开发调研 ｜ A survey in Go microservices development</title><link>https://chajiuqqq.github.io//post/%5BTODO%5D%20Go-wei-fu-wu-kai-fa-diao-yan-%20%EF%BD%9C%20A%20survey%20in%20Go%20microservices%20development.html</link><description>大纲&#13;
&#13;
- 什么是微服务架构？&#13;
- 微服务开发和传统单体应用有什么区别？&#13;
- 什么是服务治理？&#13;
- 常用微服务开发框架有哪些？&#13;
- 微服务开发流程？。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/%5BTODO%5D%20Go-wei-fu-wu-kai-fa-diao-yan-%20%EF%BD%9C%20A%20survey%20in%20Go%20microservices%20development.html</guid><pubDate>Tue, 30 Apr 2024 09:58:18 +0000</pubDate></item><item><title>Go中数字类型如何获取二进制表示｜Converting from an integer to its binary representation</title><link>https://chajiuqqq.github.io//post/Go-zhong-shu-zi-lei-xing-ru-he-huo-qu-er-jin-zhi-biao-shi-%EF%BD%9CConverting%20from%20an%20integer%20to%20its%20binary%20representation.html</link><description>2种方法：&#13;
&#13;
```go&#13;
num := int64(127)&#13;
&#13;
// 1&#13;
res := strconv.FormatInt(num, 2)&#13;
fmt.Println(res)&#13;
&#13;
// 2&#13;
res = fmt.Sprintf('%b', num)&#13;
fmt.Println(res)&#13;
&#13;
// 3&#13;
res = fmt.Sprintf('%08b', num)&#13;
fmt.Println(res)&#13;
&#13;
```&#13;
&#13;
```&#13;
1111111&#13;
1111111&#13;
01111111&#13;
```&#13;
&#13;
From: https://stackoverflow.com/questions/13870845/converting-from-an-integer-to-its-binary-representation。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/Go-zhong-shu-zi-lei-xing-ru-he-huo-qu-er-jin-zhi-biao-shi-%EF%BD%9CConverting%20from%20an%20integer%20to%20its%20binary%20representation.html</guid><pubDate>Thu, 25 Apr 2024 08:20:35 +0000</pubDate></item><item><title>TED：多久才能学会一个技能？| how to learn anything</title><link>https://chajiuqqq.github.io//post/TED%EF%BC%9A-duo-jiu-cai-neng-xue-hui-yi-ge-ji-neng-%EF%BC%9F-%20how%20to%20learn%20anything.html</link><description>&gt; [The first 20 hours -- how to learn anything | Josh Kaufman | TEDxCSU](https://www.youtube.com/watch?v=5MgBikgcWnY) &#13;
&#13;
[ZH]&#13;
&#13;
**First：分解你要学的技能**&#13;
&#13;
将技能分解为一个个小技能，优先练习关键的技能&#13;
&#13;
**Second：要有一定的理论知识的学习，帮助你自我纠错**&#13;
&#13;
学习能够支撑你开始练习的知识就可以了，不要拖延&#13;
&#13;
**Third：排除干扰**&#13;
&#13;
排除电视、网络、手机等阻止你坐下来开始练习的干扰&#13;
&#13;
**Fourth：至少练习20h**&#13;
&#13;
在你开始想做什么前，先给自己20h的练习时间，帮你度过那段最容易受挫的时期&#13;
&#13;
---&#13;
&#13;
[EN]&#13;
&#13;
**First: deconstruct skills you want to learn**&#13;
Break down skills into small ones and practice key skills first&#13;
&#13;
**Second: Learn enough to self-correct**&#13;
Just learn enough knowledge to support your practice. Don't delay.&#13;
&#13;
**Third: Remove practice distractions**&#13;
Eliminate distractions such as television, the internet, and your cell phone that prevent you from sitting down and practicing.&#13;
&#13;
**Fourth: Practice at least 20 hours**&#13;
Before you start thinking about doing something, give yourself 20 hours of practice time to help you get through the most frustrating period.&#13;
。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/TED%EF%BC%9A-duo-jiu-cai-neng-xue-hui-yi-ge-ji-neng-%EF%BC%9F-%20how%20to%20learn%20anything.html</guid><pubDate>Thu, 25 Apr 2024 03:28:21 +0000</pubDate></item><item><title>解密SSL证书</title><link>https://chajiuqqq.github.io//post/jie-mi-SSL-zheng-shu.html</link><description>&gt; 原文：https://jvns.ca/blog/2017/01/31/whats-tls/&#13;
&#13;
# TLS：SSL的最新版本&#13;
&#13;
我曾困惑于TLS是什么，基本上SSL的最新版本被称为TLS（SSL 3.0之后的版本就是TLS1.0），为了避免混淆，我还是称其为SSL。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/jie-mi-SSL-zheng-shu.html</guid><pubDate>Tue, 26 Mar 2024 07:44:52 +0000</pubDate></item><item><title>非443端口部署derper</title><link>https://chajiuqqq.github.io//post/fei-443-duan-kou-bu-shu-derper.html</link><description>非443端口没法使用let's encrypt申请证书，需要自己准备证书，以下使用digiCert的证书并介绍配置步骤。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/fei-443-duan-kou-bu-shu-derper.html</guid><pubDate>Tue, 23 Jan 2024 07:00:06 +0000</pubDate></item><item><title>go中GOPROXY的配置如何修改？这种修改是全局的吗？原理是修改了什么？</title><link>https://chajiuqqq.github.io//post/go-zhong-GOPROXY-de-pei-zhi-ru-he-xiu-gai-%EF%BC%9F-zhe-zhong-xiu-gai-shi-quan-ju-de-ma-%EF%BC%9F-yuan-li-shi-xiu-gai-le-shen-me-%EF%BC%9F.html</link><description>&gt; Summary：GO的配置都是读取环境变量，比如GOPROXY有默认值，修改就是修改环境变量，要么直接export修改当前shell的环境变量，或者把export加到profile里，每次登录都会执行，比较方便。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/go-zhong-GOPROXY-de-pei-zhi-ru-he-xiu-gai-%EF%BC%9F-zhe-zhong-xiu-gai-shi-quan-ju-de-ma-%EF%BC%9F-yuan-li-shi-xiu-gai-le-shen-me-%EF%BC%9F.html</guid><pubDate>Wed, 08 Nov 2023 02:44:35 +0000</pubDate></item><item><title>Test Blog</title><link>https://chajiuqqq.github.io//post/Test%20Blog.html</link><description># Topic&#13;
&#13;
**Hello，This is my cat!**&#13;
&#13;
![tk](https://github.com/chajiuqqq/chajiuqqq.github.io/assets/50012686/c2406b48-9eca-4c3f-a282-6c037db3360a)&#13;
。</description><guid isPermaLink="true">https://chajiuqqq.github.io//post/Test%20Blog.html</guid><pubDate>Thu, 19 Oct 2023 10:03:51 +0000</pubDate></item></channel></rss>